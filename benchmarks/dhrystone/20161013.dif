diff -r 6fbc109affc2 benchmarks/dhrystone/dhry.h
--- a/benchmarks/dhrystone/dhry.h	Thu Oct 13 02:04:35 2016 +0900
+++ b/benchmarks/dhrystone/dhry.h	Thu Oct 13 03:03:54 2016 +0900
@@ -127,6 +127,30 @@
  *              non-executed "else" part was added to the "if" statement in
  *              Func_3, and a non-executed "else" part removed from Proc_3.
  *
+ * Changes (2016-10-13, by Andrew Church):
+ *              If the preprocessor symbol BENCHMARK_ONLY is defined, all
+ *              code not part of the benchmark proper (printf() output,
+ *              time measurement, and so on) is omitted from the compiled
+ *              code.  In this case, the main() function is replaced by a
+ *              function dhry_main() which accepts a single parameter, the
+ *              number of iterations for which to run the benchmark, and
+ *              returns a nonzero value on successful completion or zero
+ *              if an error was detected in the computation results.
+ *
+ *              If the preprocessor symbol DHRY_PREFIX is defined, all
+ *              globally-visible identifiers will have this prepended to
+ *              their names.  For example, if DHRY_PREFIX is "dhry_"
+ *              (without quotes), then identifiers will be renamed
+ *              dhry_Proc_1(), dhry_Ptr_Glob, and so on.  In this case,
+ *              the entry point will also be named "main" with the given
+ *              prefix (dhry_main() in this example).
+ *
+ *              The #include of <stdio.h> for strcpy() and strcmp() has
+ *              been changed to the correct <string.h>.
+ *
+ *              The two Rec_Type buffers allocated in the main routine are
+ *              now allocated directly on the stack rather than via malloc().
+ *
  ***************************************************************************
  *
  * Defines:     The following "Defines" are possible:
@@ -347,6 +371,8 @@
 
 /* Compiler and system dependent definitions: */
 
+#ifndef BENCHMARK_ONLY
+
 #ifndef TIME
 #define TIMES
 #endif
@@ -362,6 +388,8 @@
 #define Mic_secs_Per_Second     1000000.0
                 /* Berkeley UNIX C returns process times in seconds/HZ */
 
+#endif  /* BENCHMARK_ONLY */
+
 #ifdef  NOSTRUCTASSIGN
 #define structassign(d, s)      memcpy(&(d), &(s), sizeof(d))
 #else
@@ -383,7 +411,7 @@
 
 /* General definitions: */
 
-#include <stdio.h>
+#include <string.h>
                 /* for strcpy, strcmp */
 
 #define Null 0 
@@ -420,4 +448,42 @@
           } variant;
       } Rec_Type, *Rec_Pointer;
 
+#ifdef DHRY_PREFIX
 
+#define PASTE2(prefix,name)  prefix ## name
+#define PASTE(prefix,name)   PASTE2(prefix, name)
+
+#define Proc_1  PASTE(DHRY_PREFIX, Proc_1)
+#define Proc_2  PASTE(DHRY_PREFIX, Proc_2)
+#define Proc_3  PASTE(DHRY_PREFIX, Proc_3)
+#define Proc_4  PASTE(DHRY_PREFIX, Proc_4)
+#define Proc_5  PASTE(DHRY_PREFIX, Proc_5)
+#define Proc_6  PASTE(DHRY_PREFIX, Proc_6)
+#define Proc_7  PASTE(DHRY_PREFIX, Proc_7)
+#define Proc_8  PASTE(DHRY_PREFIX, Proc_8)
+#define Func_1  PASTE(DHRY_PREFIX, Func_1)
+#define Func_2  PASTE(DHRY_PREFIX, Func_2)
+#define Func_3  PASTE(DHRY_PREFIX, Func_3)
+#define main    PASTE(DHRY_PREFIX, main)
+
+#define Ptr_Glob        PASTE(DHRY_PREFIX, Ptr_Glob)
+#define Next_Ptr_Glob   PASTE(DHRY_PREFIX, Next_Ptr_Glob)
+#define Int_Glob        PASTE(DHRY_PREFIX, Int_Glob)
+#define Bool_Glob       PASTE(DHRY_PREFIX, Bool_Glob)
+#define Ch_1_Glob       PASTE(DHRY_PREFIX, Ch_1_Glob)
+#define Ch_2_Glob       PASTE(DHRY_PREFIX, Ch_2_Glob)
+#define Arr_1_Glob      PASTE(DHRY_PREFIX, Arr_1_Glob)
+#define Arr_2_Glob      PASTE(DHRY_PREFIX, Arr_2_Glob)
+
+#endif  /* DHRY_PREFIX */
+
+#ifdef BENCHMARK_ONLY
+
+#ifndef main
+#define main  dhry_main
+#endif
+
+extern int main(int Number_Of_Runs);
+                /* Benchmark entry point */
+
+#endif
diff -r 6fbc109affc2 benchmarks/dhrystone/dhry_1.c
--- a/benchmarks/dhrystone/dhry_1.c	Thu Oct 13 02:04:35 2016 +0900
+++ b/benchmarks/dhrystone/dhry_1.c	Thu Oct 13 03:03:54 2016 +0900
@@ -28,15 +28,19 @@
 int             Arr_1_Glob [50];
 int             Arr_2_Glob [50] [50];
 
-extern char     *malloc ();
 Enumeration     Func_1 ();
   /* forward declaration necessary since Enumeration may not simply be int */
 
 #ifndef REG
-        Boolean Reg = false;
 #define REG
         /* REG becomes defined as empty */
         /* i.e. no register variables   */
+#endif
+
+#ifndef BENCHMARK_ONLY
+
+#ifndef REG
+        Boolean Reg = false;
 #else
         Boolean Reg = true;
 #endif
@@ -69,6 +73,13 @@
 main ()
 /*****/
 
+#else  /* BENCHMARK_ONLY */
+
+int main(Number_Of_Runs)
+REG int Number_Of_Runs;
+
+#endif
+
   /* main program, corresponds to procedures        */
   /* Main and Proc_0 in the Ada version             */
 {
@@ -80,12 +91,17 @@
         Str_30          Str_1_Loc;
         Str_30          Str_2_Loc;
   REG   int             Run_Index;
+#ifndef BENCHMARK_ONLY
   REG   int             Number_Of_Runs;
+#endif
+
+        Rec_Type        Buf_Next_Ptr_Glob;
+        Rec_Type        Buf_Ptr_Glob;
 
   /* Initializations */
 
-  Next_Ptr_Glob = (Rec_Pointer) malloc (sizeof (Rec_Type));
-  Ptr_Glob = (Rec_Pointer) malloc (sizeof (Rec_Type));
+  Next_Ptr_Glob = &Buf_Next_Ptr_Glob;
+  Ptr_Glob = &Buf_Ptr_Glob;
 
   Ptr_Glob->Ptr_Comp                    = Next_Ptr_Glob;
   Ptr_Glob->Discr                       = Ident_1;
@@ -101,6 +117,8 @@
         /* Warning: With 16-Bit processors and Number_Of_Runs > 32000,  */
         /* overflow may occur for this array element.                   */
 
+#ifndef BENCHMARK_ONLY
+
   printf ("\n");
   printf ("Dhrystone Benchmark, Version 2.1 (Language: C)\n");
   printf ("\n");
@@ -136,6 +154,8 @@
   Begin_Time = time ( (long *) 0);
 #endif
 
+#endif  /* BENCHMARK_ONLY */
+
   for (Run_Index = 1; Run_Index <= Number_Of_Runs; ++Run_Index)
   {
 
@@ -182,6 +202,8 @@
 
   } /* loop "for Run_Index" */
 
+#ifndef BENCHMARK_ONLY
+
   /**************/
   /* Stop timer */
   /**************/
@@ -273,6 +295,32 @@
     printf ("%6.1f \n", Dhrystones_Per_Second);
     printf ("\n");
   }
+
+#else  /* BENCHMARK_ONLY */
+
+  return Int_Glob == 5
+      && Bool_Glob == 1
+      && Ch_1_Glob == 'A'
+      && Ch_2_Glob == 'B'
+      && Arr_1_Glob[8] == 7
+      && Arr_2_Glob[8][7] == Number_Of_Runs + 10
+      && Ptr_Glob->Discr == 0
+      && Ptr_Glob->variant.var_1.Enum_Comp == 2
+      && Ptr_Glob->variant.var_1.Int_Comp == 17
+      && strcmp(Ptr_Glob->variant.var_1.Str_Comp, "DHRYSTONE PROGRAM, SOME STRING") == 0
+      && Next_Ptr_Glob->Ptr_Comp == Ptr_Glob->Ptr_Comp
+      && Next_Ptr_Glob->Discr == 0
+      && Next_Ptr_Glob->variant.var_1.Enum_Comp == 1
+      && Next_Ptr_Glob->variant.var_1.Int_Comp == 18
+      && strcmp(Next_Ptr_Glob->variant.var_1.Str_Comp, "DHRYSTONE PROGRAM, SOME STRING") == 0
+      && Int_1_Loc == 5
+      && Int_2_Loc == 13
+      && Int_3_Loc == 7
+      && Enum_Loc == 1
+      && strcmp(Str_1_Loc, "DHRYSTONE PROGRAM, 1'ST STRING") == 0
+      && strcmp(Str_2_Loc, "DHRYSTONE PROGRAM, 2'ND STRING") == 0;
+
+#endif
   
 }
 
